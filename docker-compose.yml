services:
  app-temperature:
    build: ./temperature
    container_name: app-temperature
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-temperature/temperature
    ports:
      - "3000:3000"
    depends_on:
      - db-temperature

  app-log:
    build: ./log
    container_name: app-log
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-log/log
    ports:
      - "3001:3001"
    depends_on:
      - db-log

  db-temperature:
    container_name: db-temperature
    image: postgres:16
    volumes:
      - ./temperature/db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: temperature
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: "on-failure"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d temperature'"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"

  db-log:
    image: postgres:16
    container_name: db-log
    volumes:
      - ./log/db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: log
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: "on-failure"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d log'"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "5433:5432"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-temperature
      - app-log
